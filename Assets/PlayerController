using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.InputSystem;

// Takes and handles input and movement for a player character
public class PlayerController : MonoBehaviour
{
    public float moveSpeed = 1f;
    public float collisionOffset = 0.05f;
    public ContactFilter2D movementFilter;

    Vector2 movementInput;
    Rigidbody2D rb;
    Animator animator;

    SpriteRenderer spriteRenderer;
    List<RaycastHit2D> castCollisions = new List<RaycastHit2D>();

    bool canMove = true;
    void Start()
    {
        rb = GetComponent<Rigidbody2D>();
        animator = GetComponent<Animator>();
        spriteRenderer = GetComponent<SpriteRenderer>();
    }

    private void FixedUpdate() {
        ExecuteMove();
    }

     private bool CheckMove(Vector2 direction) { //Checks for collision aswell as move Character
        if(direction == Vector2.zero) return false;

        int count = rb.Cast(direction, movementFilter, castCollisions, moveSpeed * Time.fixedDeltaTime + collisionOffset); // Checks for collision based on user input and rb

        if(count == 0){
            rb.MovePosition(rb.position + direction * moveSpeed * Time.fixedDeltaTime); // Moves Character
            return true;
        }
        
        return false;
    }

    void ExecuteMove(){ //Executes Checkmove aswell as changing animator logic
        if(canMove) {
            bool success = movementInput != Vector2.zero && (CheckMove(movementInput) || CheckMove(new Vector2(movementInput.x, 0)) || CheckMove(new Vector2(0, movementInput.y)));
            animator.SetBool("isMoving", success); 
            animator.SetBool("isMovingUp", movementInput.y > 0); // Flips sprite upwards if moving upwards
            spriteRenderer.flipX = movementInput.x < 0; // Flips sprite based on movement input
        }
    }

    void OnMove(InputValue movementValue) {
        movementInput = movementValue.Get<Vector2>();
    }
}

